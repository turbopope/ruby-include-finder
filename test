#!/usr/bin/ruby

require 'pp'
require 'json'
require_relative 'get_declared_functions'
require_relative 'get_method_calls'


def for_each_rubyfile_recursive(root)
  directorylist = %x[find "#{root}" -name '*.rb'].split("\n")
  directorylist.each do |filename|
    yield(filename)
  end
end

def analyze(gemfile, mainfile, filename)
  declared_functions = get_methods_in_file(gemfile, mainfile)
  declared_functions.merge!(get_methods_declared_in_file(gemfile, filename))
  method_calls = get_method_calls(filename)
  puts
  method_calls.each do |method_call|
    location = declared_functions[method_call].length > 3 ? "..." : declared_functions[method_call].to_a.join(' or ') if declared_functions[method_call]
    puts "#{method_call} from [#{location}]"
  end
end


exit if __FILE__ != $0

gemfile = ARGV[0]
mainfile = ARGV[1]#File.dirname(gemfile)
filename = ARGV[2]

analyze(gemfile, mainfile, filename)
