#!/usr/bin/ruby

require 'pp'
require 'set'
require 'parser/current'
require_relative('send_processor')
require_relative('get_includes')
require 'json'


def for_each_rubyfile_recursive(root)
  directorylist = %x[find "#{root}" -name '*.rb'].split("\n")
  directorylist.each do |filename|
    yield(filename)
  end
end




gemfile = ARGV[0]
dir = ARGV[1] || File.dirname(gemfile)

for_each_rubyfile_recursive(dir) do |filename|
  puts filename
  # pp declared_functions = get_declared_functions(filename, gemfile)
  pp declared_functions = JSON.parse(`ruby get_declared_functions.rb #{filename}, #{gemfile}`)
  ast = Parser::CurrentRuby.parse(File.read(filename))
  sendProcessor = SendProcessor.new
  sendProcessor.process(ast)
  pp method_calls = sendProcessor.method_calls
  method_calls.each do |method_call|
    puts "#{method_call} from [#{declared_functions[method_call].to_a.join(' or ')}]"
  end
end
